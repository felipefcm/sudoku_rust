use sudoku_rs::solver::Solver;
use sudoku_rs::sudoku::Sudoku;

#[test]
fn can_solve() {
    let tests = [
        (
            "004300209005009001070060043006002087190007400050083000600000105003508690042910300",
            "864371259325849761971265843436192587198657432257483916689734125713528694542916378",
        ),
        (
            "503070190000006750047190600400038000950200300000010072000804001300001860086720005",
            "563472198219386754847195623472638519951247386638519472795864231324951867186723945",
        ),
        (
            "830040096020010008904700030409002065308001070000603800507030020000506400002080100",
            "831245796726319548954768231419872365368451972275693814587134629193526487642987153",
        ),
        (
            "008060700030870012000205930000700504905004000802903070106000080009120360700000250",
            "298361745534879612617245938361782594975614823842953176126537489459128367783496251",
        ),
    ];

    for (p, s) in tests {
        let mut sudoku = Sudoku::parse_state(p);

        let solved = Solver::solve(&mut sudoku);
        assert!(solved);

        let solution = sudoku.stringify_state();

        assert_eq!(solution, s);
    }
}
